- hosts: all
  become: true
  tasks:
    - name: Actualiza los paquetes al inicio
      apt:
        update_cache: yes
        upgrade: dist
      when: ansible_os_family == 'Debian'


    - name: Instala las dependencias necesarias
      apt:
        name:
          - python3-pip
          - python3-venv
          - git
          - nginx
          - virtualenv
        state: present
      when: ansible_os_family == 'Debian'


    - name: Clona el repositorio
      git:
        repo: "https://github.com/fernandogonzalez90/BackendDjango.git"
        dest: /home/admin/BackendDjango


    - name: Crea el entorno virtual dentro del proyecto
      command: python3 -m venv /home/admin/BackendDjango/env
      args:
        creates: /home/admin/BackendDjango/env/bin/activate


    - name: Instala los requirements usando el entorno virtual
      pip:
        requirements: /home/admin/BackendDjango/requirements.txt
        virtualenv: /home/admin/BackendDjango/env


    - name: Configura la ip en allowed_hosts.py
      copy:
       dest: /home/admin/BackendDjango/Backend/allowed_hosts.py
       content: "ALLOWED_HOSTS = ['{{server_ip}}', 'localhost', 'backendjango.ddns.net']"

    - name: Establecer permisos del directorio del proyecto
      ansible.builtin.file:
        path: /home/admin/BackendDjango
        owner: admin
        group: admin
        mode: '0755'
        recurse: yes
      become: yes

    - name: Crea el directorio static para desarrollo
      file:
        path: /home/admin/BackendDjango/staticfiles
        state: directory
        mode: '0755'

    - name: Establecer permisos del directorio staticfiles
      ansible.builtin.file:
        path: /home/admin/BackendDjango/staticfiles
        owner: admin
        group: admin
        mode: '0755'
        recurse: yes
      become: yes

    - name: Ejecuta collectstatic
      shell: |
        . /home/admin/BackendDjango/env/bin/activate
        python /home/admin/BackendDjango/manage.py collectstatic --noinput
      args:
        chdir: /home/admin/BackendDjango

    - name: Crear db.sqlite3 si no existe
      ansible.builtin.file:
        path: /home/admin/BackendDjango/db.sqlite3
        state: touch
        owner: admin
        group: admin
        mode: '0664'
      become: yes


    - name: Ejecuta migrate
      shell: |
        . /home/admin/BackendDjango/env/bin/activate
        python /home/admin/BackendDjango/manage.py migrate
      args:
        chdir: /home/admin/BackendDjango


    - name: Configura Gunicorn
      copy:
        dest: /etc/systemd/system/gunicorn.service
        content: |
          [Unit]
          Description=gunicorn daemon
          After=network.target

          [Service]
          User=admin
          Group=admin
          WorkingDirectory=/home/admin/BackendDjango
          ExecStart=/home/admin/BackendDjango/env/bin/python3 -m gunicorn --workers 3 --bind 0.0.0.0 Backend.wsgi:application

          [Install]
          WantedBy=multi-user.target

    - name: Inicia y habilita gunicorn
      systemd:
        name: gunicorn
        state: started
        enabled: yes

    - name: Reinicia Gunicorn
      systemd:
        name: gunicorn
        state: restarted
      become: yes


    - name: Configura Nginx
      copy:
        dest: /etc/nginx/sites-available/BackendDjango
        content: |
          server {
              listen 80;
              server_name backendjango.ddns.net;

              location / {
                  proxy_pass http://localhost:8000;
                  proxy_set_header Host $host;
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_redirect off;
              }
              location /static/ {
              alias /home/admin/BackendDjango/staticfiles/;
              }
          }

    - name: Habilita el sitio de Nginx
      file:
        src: /etc/nginx/sites-available/BackendDjango
        dest: /etc/nginx/sites-enabled/BackendDjango
        state: link


    - name: Remueve el sitio por default de Nginx
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent


    - name: Habilitar configuraci√≥n de Nginx
      systemd:
        name: nginx
        state: started
        enabled: yes